---
anchor-sections: false
---

::: {.column-screen}
```{=html}
<div class="snow-container" id="snow-container"></div>
<div class="text-overlay">
<h2>OpenSkiStats</h2>
<p> an open resource for geospatial metrics of downhill ski areas
</p>
</div>
<div class="footer-text">
  <p>
  The data comes from <a href="https://openskimap.org" style="color: #ffffff; text-decoration: underline;">OpenSkiMap</a>, which refines <a href="https://www.openstreetmap.org" style="color: #ffffff; text-decoration: underline;">OpenStreetMap</a> to create an amazing interactive visualization of the world and all its ski trails.
  Thousands of OpenStreetMap contributors have worked for decades to annotate ski areas and their trails.
  This is an ongoing effort, and we can expect the underlying data to continue to improve over time.
  </p>

  <p>
  This project brings to life the data behind these ski areas with summary statistics. 
  <!-- Explore ski area metrics like trail orientation, vertical drops, and more to uncover fascinating insights into the geography of skiing. -->
  The founding application of this project is to explore the orientation (compass bearings) of all the runs that comprise a ski area or grouping of ski areas.
  </p>
</div>
<style>
/* Snow Animation Styling */
body, html {
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(to top, #0d1b2a, #1b263b, #415a77, #778da9);
  color: white;
  overflow-x: hidden; /* Prevent horizontal scrolling */
}

.snow-container {
  position: fixed; /* Keep snow animation fixed */
  width: 100%;
  height: 100%;
  overflow: hidden;
  z-index: 1;
}

.snowflake {
  position: absolute;
  top: -10px;
  font-size: 1em;
  color: white;
  opacity: 0.8;
  animation: fall linear infinite;
}

@keyframes fall {
  to {
    transform: translateY(100vh) rotate(360deg);
    opacity: 0;
  }
}

.text-overlay {
  position: relative; /* Make it part of the document flow */
  padding: 20px;
  margin: 10px auto 0;
  max-width: min(90%, 700px); 
  text-align: center;
  z-index: 2;
  padding-top: 20vh; /* 20% of the viewport height */
}

.text-overlay h2 {
  font-size: 3em;
  margin: 0;
}

.text-overlay p {
  font-size: 1.2em;
  margin: 10px 0 0;
}

.footer-text {
  position: relative; /* Make it scrollable */
  margin: 50px auto;
  max-width: min(1000px, 90%);
  text-align: center;
  font-size: 1em;
  background-color: rgba(0, 0, 0, 0.5);
  padding: 15px;
  border-radius: 10px;
  z-index: 2;
}

/* Mobile styles */
@media (max-width: 768px) {
  .text-overlay h2 {
    font-size: 2em;
  }

  .text-overlay p {
    font-size: 1em;
  }

  .footer-text {
    font-size: 0.9em;
    padding: 10px;
  }
}

@media (max-width: 480px) {
  .text-overlay h2 {
    font-size: 1.5em;
  }

  .text-overlay p {
    font-size: 0.9em;
  }

  .footer-text {
    font-size: 0.8em;
    padding: 8px;
  }
}
</style>


<script>
// Snowflake generator
const snowContainer = document.getElementById('snow-container');
let snowflakeInterval;

function createSnowflake() {
  const snowflake = document.createElement('div');
  snowflake.classList.add('snowflake');
  snowflake.textContent = '❄';
  snowflake.style.left = `${Math.random() * 100}vw`;
  const baseSize = Math.random() * 0.7;
  const fontSize = baseSize * Math.sqrt(window.innerWidth) + 1
  snowflake.style.fontSize = `${fontSize}px`;
  snowflake.style.animationDuration = `${Math.random() * 30 + 3}s`;
  // snowflake.style.animationDelay = `${Math.random() * 2}s`;
  snowContainer.appendChild(snowflake);

  // Remove snowflake after animation
  setTimeout(() => snowflake.remove(), 10000);
}

// Generate snowflakes continuously
function adjustSnowflakeFrequency() {
  const width = window.innerWidth;

  if (snowflakeInterval) {
    clearInterval(snowflakeInterval);
  }

  // Set the interval based on width
  let intervalTime;
  if (width > 1200) {
    intervalTime = 200; // Frequent for larger screens
  } else if (width > 800) {
    intervalTime = 400; // Moderate for medium screens
  } else {
    intervalTime = 600; // Less frequent for smaller screens
  }

  snowflakeInterval = setInterval(createSnowflake, intervalTime);
}

// Initial adjustment
adjustSnowflakeFrequency();

// Adjust frequency on window resize
window.addEventListener('resize', adjustSnowflakeFrequency);
</script>

:::
